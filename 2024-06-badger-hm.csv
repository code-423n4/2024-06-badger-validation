status,issue,title,validator comment 1,validator comment 2,validator comment 3,root cause 1,root cause 2,root cause 3,merged root cause,primary finding,proposed root cause group,,,,
Satisfactory,findings-7,Main variables - Position manager allows needs to be revoked after each operation can be bypassed,Permit will not be renounced if done outside of zap contracts,,Permit leak. Same root cause as in #54,"""https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/EbtcLeverageZapRouter.sol#L303,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/EbtcLeverageZapRouter.sol#L455,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/EbtcLeverageZapRouter.sol#L245""",,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/ZapRouterBase.sol#L115-L133,"""https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/EbtcLeverageZapRouter.sol#L303,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/EbtcLeverageZapRouter.sol#L455,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/EbtcLeverageZapRouter.sol#L245,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/ZapRouterBase.sol#L115-L133""",findings-7,"""DUPE-EbtcLeverageZapRouter-001,DUPE-EbtcLeverageZapRouter-002,DUPE-EbtcLeverageZapRouter-003,DUPE-ZapRouterBase-002""",DUPE-EbtcLeverageZapRouter-001,DUPE-EbtcLeverageZapRouter-002,DUPE-EbtcLeverageZapRouter-003,DUPE-ZapRouterBase-002
Satisfactory,validation-122,Adjusting a CDP allows a user to reduce their collateral under the threshold enforced by the protocol,Invalid,,Could be illiquid,,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/EbtcLeverageZapRouter.sol#L403-L467,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/EbtcLeverageZapRouter.sol#L403-L467,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/EbtcLeverageZapRouter.sol#L403-L467,validation-122,DUPE-EbtcLeverageZapRouter-001,,,,
Satisfactory,validation-90,Potential Collateral Requirement Oversight in CDP Adjustment Functions,Invalid. If an adjust of collateral is valid or invalid is task of borrow operations contract,,Could be illiquid,,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/EbtcLeverageZapRouter.sol#L403,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/EbtcLeverageZapRouter.sol#L403-L467,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/EbtcLeverageZapRouter.sol#L403-L467,validation-122,DUPE-EbtcLeverageZapRouter-001,,,,
Satisfactory,validation-108,Reverting all actions,Invalid. Check the comment above the contract,,Could be ready DoS if willSweep were immutably set true,,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-protocol/packages/contracts/contracts/LeverageMacroBase.sol#L241,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-protocol/packages/contracts/contracts/LeverageMacroBase.sol#L241,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-protocol/packages/contracts/contracts/LeverageMacroBase.sol#L241,validation-146,DUPE-LeverageMacroBase-001,,,,
Satisfactory,validation-146,`LeverageMacroBase::_doOperation` will revert if `willSweep` is set to true,Invalid,,Could be ready DoS if willSweep were immutably set true. Impractical mitigation suggested though,,https://github.com/code-423n4/ebtc/blob/main/packages/contracts/contracts/LeverageMacroBase.sol#L241-L243,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-protocol/packages/contracts/contracts/LeverageMacroBase.sol#L241,"""https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-protocol/packages/contracts/contracts/LeverageMacroBase.sol#L241,https://github.com/code-423n4/ebtc/blob/main/packages/contracts/contracts/LeverageMacroBase.sol#L241-L243""",validation-146,"""DUPE-LeverageMacroBase-001,DUPE-LeverageMacroBase-004""",DUPE-LeverageMacroBase-001,DUPE-LeverageMacroBase-004,,
Satisfactory,validation-144,"`_depositRawEthIntoLido` doesn't check for after - before balance, can lead to first depositor vulnerability",Use balance diff instead of just balanceOf,,stEth.balanceOf(address(this)) is balAfter,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-protocol/packages/contracts/contracts/LeverageMacroBase.sol#L491C20-L492C54,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/ZapRouterBase.sol#L38,,"""https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/ZapRouterBase.sol#L38,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-protocol/packages/contracts/contracts/LeverageMacroBase.sol#L491C20-L492C54""",validation-144,"""DUPE-LeverageMacroBase-002,DUPE-ZapRouterBase-001""",DUPE-LeverageMacroBase-002,DUPE-ZapRouterBase-001,,
Satisfactory,validation-74,_doSwapChecks might fail to validate the expectedMinOut constraint.,Use balance diff instead of just balanceOf,,Mitigation reduces likelihood of revert,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-protocol/packages/contracts/contracts/LeverageMacroBase.sol#L491C20-L492C54,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-protocol/packages/contracts/contracts/LeverageMacroBase.sol#L491,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-protocol/packages/contracts/contracts/LeverageMacroBase.sol#L485-L497,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-protocol/packages/contracts/contracts/LeverageMacroBase.sol#L491C20-L492C54,validation-144,DUPE-LeverageMacroBase-002,,,,
Satisfactory,validation-93,LeverageMacroBase::_doSwapChecks Misleading Balance Calculation Compromises Slippage Protection,Use balance diff instead of just balanceOf,,Insufficient proof opposing coded POC of #74,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-protocol/packages/contracts/contracts/LeverageMacroBase.sol#L491C20-L492C54,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-protocol/packages/contracts/contracts/LeverageMacroBase.sol#L491,,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-protocol/packages/contracts/contracts/LeverageMacroBase.sol#L491C20-L492C54,validation-144,DUPE-LeverageMacroBase-002,,,,
Satisfactory,validation-113,Incorrect Comparison Logic in Post-Operation Checks,Comparison operator is inverted for lte and gte cases,,Insufficient proof alleging the flaw as it's in #75,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-protocol/packages/contracts/contracts/LeverageMacroBase.sol#L277-L290,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/LeverageZapRouterBase.sol#L269,,"""https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/LeverageZapRouterBase.sol#L269,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-protocol/packages/contracts/contracts/LeverageMacroBase.sol#L277-L290""",validation-50,"""DUPE-LeverageMacroBase-003,DUPE-LeverageZapRouterBase-001""",DUPE-LeverageMacroBase-003,DUPE-LeverageZapRouterBase-001,,
Satisfactory,validation-149,Incorrect comparison logic in `_doCheckValueType` leading to incorrect post-operation checks,Comparison operator is inverted for lte and gte cases,,Insufficient proof alleging the flaw as it's in #75,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-protocol/packages/contracts/contracts/LeverageMacroBase.sol#L277-L290,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/LeverageZapRouterBase.sol#L269,,"""https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/LeverageZapRouterBase.sol#L269,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-protocol/packages/contracts/contracts/LeverageMacroBase.sol#L277-L290""",validation-50,"""DUPE-LeverageMacroBase-003,DUPE-LeverageZapRouterBase-001""",DUPE-LeverageMacroBase-003,DUPE-LeverageZapRouterBase-001,,
SSatisfactory,validation-50,Incorrect comparison logic in `_doCheckValueType` leading to incorrect post-operation checks,Comparison operator is inverted for lte and gte cases,,Insufficient proof alleging the flaw as it's in #75,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-protocol/packages/contracts/contracts/LeverageMacroBase.sol#L277-L290,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/LeverageZapRouterBase.sol#L269,,"""https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/LeverageZapRouterBase.sol#L269,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-protocol/packages/contracts/contracts/LeverageMacroBase.sol#L277-L290""",validation-50,"""DUPE-LeverageMacroBase-003,DUPE-LeverageZapRouterBase-001""",DUPE-LeverageMacroBase-003,DUPE-LeverageZapRouterBase-001,,
Satisfactory,validation-125,The condition check for parameters in the _getPostCheckParams function is reversed,Use lte instead of gte for decrease operations,,Reverse condition wrongly used,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/LeverageZapRouterBase.sol#L269,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/LeverageZapRouterBase.sol#L269,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/LeverageZapRouterBase.sol#L269,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/LeverageZapRouterBase.sol#L269,validation-98,DUPE-LeverageZapRouterBase-001,,,,
Satisfactory,validation-126,Wrong judgment causes the user's check to not work,Use lte instead of gte for decrease operations,,Reverse condition wrongly used,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/LeverageZapRouterBase.sol#L269,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/LeverageZapRouterBase.sol#L269,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/LeverageZapRouterBase.sol#L269,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/LeverageZapRouterBase.sol#L269,validation-98,DUPE-LeverageZapRouterBase-001,,,,
Satisfactory,validation-170,[H-1] `PostCheckParams` do not validate collateral correctly.,Use lte instead of gte for decrease operations,,Reverse condition wrongly used,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/LeverageZapRouterBase.sol#L269,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/LeverageZapRouterBase.sol#L269,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/LeverageZapRouterBase.sol#L269,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/LeverageZapRouterBase.sol#L269,validation-98,DUPE-LeverageZapRouterBase-001,,,,
Satisfactory,validation-75,Wrong slippage control for the collateral shares for a cdp due to logical error in LeverageZapRouterBase._getPostCheckParams.,Use lte instead of gte for decrease operations,,Reverse condition wrongly used. Seems right with detailed coded POC,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/LeverageZapRouterBase.sol#L269,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/LeverageZapRouterBase.sol#L269,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/LeverageZapRouterBase.sol#L269,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/LeverageZapRouterBase.sol#L269,validation-98,DUPE-LeverageZapRouterBase-001,,,,
Satisfactory,validation-76,`Operator.gte` is used for both increase or decrease CDP adjustments,Use lte instead of gte for decrease operations,,Reverse condition wrongly used. Seems right with detailed coded POC,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/LeverageZapRouterBase.sol#L269,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/LeverageZapRouterBase.sol#L269,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/LeverageZapRouterBase.sol#L269,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/LeverageZapRouterBase.sol#L269,validation-98,DUPE-LeverageZapRouterBase-001,,,,
Satisfactory,validation-98,Wrong `Operator` used for `expectedCollateral`,Use lte instead of gte for decrease operations,,Reverse condition wrongly used. Seems right with detailed coded POC,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/LeverageZapRouterBase.sol#L269,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/LeverageZapRouterBase.sol#L269,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/LeverageZapRouterBase.sol#L269,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/LeverageZapRouterBase.sol#L269,validation-98,DUPE-LeverageZapRouterBase-001,,,,
Satisfactory,findings-14,Staking ETH incorrectly assumes revert bubbling,Lido call is not check for success,,_submit(0) will be called via the fallback function in Lido and revert if need be,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/ZapRouterBase.sol#L38-L38,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/ZapRouterBase.sol#L38,,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/ZapRouterBase.sol#L38-L38,findings-14,DUPE-ZapRouterBase-001,,,,
Satisfactory,validation-100,ZapRouterBase::_depositRawEthIntoLido Lacks Proper Validation Checks for Low-Level call,Lido call is not check for success,,_submit(0) will be called via the fallback function in Lido and revert if need be,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/ZapRouterBase.sol#L38-L38,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/ZapRouterBase.sol#L38,,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/ZapRouterBase.sol#L38-L38,findings-14,DUPE-ZapRouterBase-001,,,,
Satisfactory,validation-101,Unchecked Low-Level Call in _depositRawEthIntoLido Function,Lido call is not check for success,,_submit(0) will be called via the fallback function in Lido and revert if need be,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/ZapRouterBase.sol#L38-L38,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/ZapRouterBase.sol#L38,,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/ZapRouterBase.sol#L38-L38,findings-14,DUPE-ZapRouterBase-001,,,,
Satisfactory,validation-107,Unchecked .call() Low-Level Function Result,Lido call is not check for success,,_submit(0) will be called via the fallback function in Lido and revert if need be,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/ZapRouterBase.sol#L38-L38,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/ZapRouterBase.sol#L38,,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/ZapRouterBase.sol#L38-L38,findings-14,DUPE-ZapRouterBase-001,,,,
Satisfactory,validation-110,ETH Lockup Due to Lack of Error Handling in EbtcLeverageZapRouter Contract,Lido call is not check for success,,_submit(0) will be called via the fallback function in Lido and revert if need be,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/ZapRouterBase.sol#L38-L38,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/ZapRouterBase.sol#L38,,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/ZapRouterBase.sol#L38-L38,findings-14,DUPE-ZapRouterBase-001,,,,
Satisfactory,validation-111,Failure in ETH to stETH Conversion Without User Feedback in EbtcLeverageZapRouter Contract,Lido call is not check for success,,_submit(0) will be called via the fallback function in Lido and revert if need be,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/ZapRouterBase.sol#L38-L38,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/ZapRouterBase.sol#L38,,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/ZapRouterBase.sol#L38-L38,findings-14,DUPE-ZapRouterBase-001,,,,
Satisfactory,validation-115,Unchecked return value of the low-level call() in `_depositRawEthIntoLido` .,Lido call is not check for success,,_submit(0) will be called via the fallback function in Lido and revert if need be,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/ZapRouterBase.sol#L38-L38,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/ZapRouterBase.sol#L38,,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/ZapRouterBase.sol#L38-L38,findings-14,DUPE-ZapRouterBase-001,,,,
Satisfactory,validation-118,Unchecked ETH Transfer in _depositRawEthIntoLido Function,Lido call is not check for success,,_submit(0) will be called via the fallback function in Lido and revert if need be,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/ZapRouterBase.sol#L38-L38,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/ZapRouterBase.sol#L38,,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/ZapRouterBase.sol#L38-L38,findings-14,DUPE-ZapRouterBase-001,,,,
Satisfactory,validation-120,Deposit success on Lido is not checked which could lead to unexpected behavior,Lido call is not check for success,,_submit(0) will be called via the fallback function in Lido and revert if need be,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/ZapRouterBase.sol#L38-L38,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/ZapRouterBase.sol#L38,,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/ZapRouterBase.sol#L38-L38,findings-14,DUPE-ZapRouterBase-001,,,,
Satisfactory,validation-13,Add Require Statement to Handle Potential Failures in _depositRawEthIntoLido Function,Lido call is not check for success,,_submit(0) will be called via the fallback function in Lido and revert if need be,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/ZapRouterBase.sol#L38-L38,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/ZapRouterBase.sol#L38,,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/ZapRouterBase.sol#L38-L38,findings-14,DUPE-ZapRouterBase-001,,,,
Satisfactory,validation-131,If Lido eth deposit reverts all users deposited Eth  will be locked in smart contract,Lido call is not check for success,,_submit(0) will be called via the fallback function in Lido and revert if need be,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/ZapRouterBase.sol#L38-L38,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/ZapRouterBase.sol#L38,,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/ZapRouterBase.sol#L38-L38,findings-14,DUPE-ZapRouterBase-001,,,,
Satisfactory,validation-145,Unsafe Ether Deposit Using Low-Level call in _depositRawEthIntoLido function,Lido call is not check for success,,_submit(0) will be called via the fallback function in Lido and revert if need be,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/ZapRouterBase.sol#L38-L38,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/ZapRouterBase.sol#L38,,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/ZapRouterBase.sol#L38-L38,findings-14,DUPE-ZapRouterBase-001,,,,
Satisfactory,validation-159,Missing the return value check when sending native ETH to Lido can result in mis-functioning of _adjustCDP and user's fund lost,Lido call is not check for success,,_submit(0) will be called via the fallback function in Lido and revert if need be,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/ZapRouterBase.sol#L38-L38,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/ZapRouterBase.sol#L38,,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/ZapRouterBase.sol#L38-L38,findings-14,DUPE-ZapRouterBase-001,,,,
Satisfactory,validation-17,Unchecked return value on call in the _convertRawEthToStETH function on the ZapRouterBase contract,Lido call is not check for success,,_submit(0) will be called via the fallback function in Lido and revert if need be,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/ZapRouterBase.sol#L38-L38,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/ZapRouterBase.sol#L38,,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/ZapRouterBase.sol#L38-L38,findings-14,DUPE-ZapRouterBase-001,,,,
Satisfactory,validation-184,Unchecked Return Value in Low-Level `call` Function,Lido call is not check for success,,_submit(0) will be called via the fallback function in Lido and revert if need be,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/ZapRouterBase.sol#L38-L38,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/ZapRouterBase.sol#L38,,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/ZapRouterBase.sol#L38-L38,findings-14,DUPE-ZapRouterBase-001,,,,
Satisfactory,validation-83,Low-level call return value is not checked,Lido call is not check for success,,_submit(0) will be called via the fallback function in Lido and revert if need be,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/ZapRouterBase.sol#L38-L38,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/ZapRouterBase.sol#L38,,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/ZapRouterBase.sol#L38-L38,findings-14,DUPE-ZapRouterBase-001,,,,
Unsatisfactory,findings-11,Price manipulation in the DEX,Invalid.,price is from offchain oracle,Inadequate coded POC alleging the exploit,,,,"""""",,,,,,
Unsatisfactory,findings-12,openCdp，adjustCdp Sliding point control may fail,Invalid. Low quality report,,Devoid of coded POC alleging flaw on the intended design,,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/LeverageZapRouterBase.sol#L269,,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/LeverageZapRouterBase.sol#L269,,,,,,
Unsatisfactory,findings-3,Both routers don't support third party delegating operations on CDP,"Invalid. Feature request, no security impact described",,Devoid of coded POC alleging flaw on the intended design,,,,"""""",,,,,,
Unsatisfactory,findings-8,Incorrect collateral calculation,Report is of low quality and lacks evidence,collateral is stETH share,Insufficient proof alleging the flaw,,,,"""""",,,,,,
Unsatisfactory,findings-9,"ZapRouter Contract Can Retain Tokens, Breaking Invariant","Invalid. Seems like a user mistake, no impact for the protocol described",user error,Low QA user input mistake,,,,"""""",,,,,,
Unsatisfactory,validation-10,no check that `_stETHDiff` is greater than zero,Invalid,,Unlikely. _stETHDiff of type unit256 will revert if ever happens,,,,"""""",,,,,,
Unsatisfactory,validation-102,Malicious actors can donate steth temporarily to Sandwich and MEV swaps through the router,Invalid,,Commonly known issue in DEX on an intended design,,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-protocol/packages/contracts/contracts/LeverageMacroBase.sol#L491-L492,,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-protocol/packages/contracts/contracts/LeverageMacroBase.sol#L491-L492,,,,,,
Unsatisfactory,validation-103,Lack of Slippage Protection in Token Swaps,Invalid. The code does have slippage protection.,,It's implemented in LeverageZapRouterBase::_getSwapOperations,,,,"""""",,,,,,
Unsatisfactory,validation-104,Improper CDP Borrower Address Handling in `_openCdpCallback` Function,GPT,,"Missing borrower address applicable to the internal _openCdp(), NOT the external openCdp()",,,,"""""",,,,,,
Unsatisfactory,validation-105,Flash Loan Transaction Might Always End up Reverting Due to An Assumption That The Receiver Has Already Set The Necessary Approval,Invalid. Contract is OOS,set to type(uint256).max in constructor(),Insufficient proof alleging the flaw,,,,"""""",,,,,,
Unsatisfactory,validation-106,ERC20 tokens with no return value will fail to transfer,Invalid,,_submit(0) will be called via the fallback function in Lido and revert if need be,,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/ZapRouterBase.sol#L38,,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/ZapRouterBase.sol#L38,,,,,,
Unsatisfactory,validation-109,Inconsistent Collateral Assignment in `openCdpWithWstEth` Function Allows Under-Collateralized CDP Creation,Invalid,,That's the leveraged amount needed,,,,"""""",,,,,,
Unsatisfactory,validation-11,lack checks `_stETHReiceived`,GPT,,Unlikely. _stETHReceived of type unit256 will revert if ever happens,,,,"""""",,,,,,
Unsatisfactory,validation-112,Unintended Swap Failures Leading to  DoS in `_doSwapChecks` Function,Change > to >=,,Low inconsequential,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-protocol/packages/contracts/contracts/LeverageMacroBase.sol#L490-L494,,,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-protocol/packages/contracts/contracts/LeverageMacroBase.sol#L490-L494,,,,,,
Unsatisfactory,validation-114,"Position Manager Permit Not Revoked After Operations, Compromising CDP Security",GPT,,borrowerOperations.renouncePositionManagerApproval(msg.sender) is invoked in EbtcLeverageZapRouter.sol,,,,"""""",,,,,,
Unsatisfactory,validation-116,Insufficient Collateral Transfer Check in _getAdjustCdpParams,Invalid,,Incorrect assumptions. Collateral already transferred in by the caller when opening cdp,,,,"""""",,,,,,
Unsatisfactory,validation-117,Fixed Hash Value in LeverageMacroBase contract,Invalid,,Commonly known issue,,,,"""""",,,,,,
Unsatisfactory,validation-12,`doOperation` Marked External But Always Reverts,Invalid,,Intended design. The internal function from macro will be used,,,,"""""",,,,,,
Unsatisfactory,validation-121,The contract does not sweep potential remaining stETH tokens,Invalid. Report does not describe how stETH will remain in the contract,,It will happen in ZapRouterBase::_transferStEthToCaller,,,,"""""",,,,,,
Unsatisfactory,validation-123,"In the _doSwapChecks function, the comparison between the number of tokens received and expectedMinOut should use >=",Change > to >=,,Low inconsequential,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-protocol/packages/contracts/contracts/LeverageMacroBase.sol#L490-L494,,,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-protocol/packages/contracts/contracts/LeverageMacroBase.sol#L490-L494,,,,,,
Unsatisfactory,validation-124,Users can re-enter Router through DEX to reduce the cost of flash loan from BorrowerOperations,Invalid,nonReentrant exists on _openCdp(),Devoid of coded POC showcasing an actual scenario,,,,"""""",,,,,,
Unsatisfactory,validation-127,Not real closing cdp,Invalid,called in flashloan callback func,Insufficient proof alleging the flaw,,,,"""""",,,,,,
Unsatisfactory,validation-128,The router may not be able to operate due to insufficient funds.,Invalid,funds from flashloan,Insufficient proof alleging the flaw,,,,"""""",,,,,,
Unsatisfactory,validation-129,"Protocol or Users won't be eligible for Lido's referral rewards for depositing ETH, as the referral account is not properly set.",Invalid,referal program looks retired https://snapshot.org/#/lido-snapshot.eth/proposal/0xc017c451cd1ec85bf259d1f866844da296bb0f3209fd58297ccf07f7e91fa690,An opportunity loss the protocol is already aware of,,,,"""""",,,,,,
Unsatisfactory,validation-130,Unlocked Pragma,Invalid,,Low QA frequently reported by the bots,,,,"""""",,,,,,
Unsatisfactory,validation-132,Misalignment in Borrower Assignment when Opening CDP,Invalid,,Intended design,,,,"""""",,,,,,
Unsatisfactory,validation-133,`excessivelySafeCall` will not work with protocol that returns err-code instead of reverting,ExcessivelySafeCall does not work for some DEXs,,Insufficient proof alleging the flaw,"""https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-protocol/packages/contracts/contracts/LeverageMacroBase.sol#L464-L470,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-protocol/packages/contracts/contracts/LeverageMacroBase.sol#L594-L597""",,,"""https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-protocol/packages/contracts/contracts/LeverageMacroBase.sol#L464-L470,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-protocol/packages/contracts/contracts/LeverageMacroBase.sol#L594-L597""",,,,,,
Unsatisfactory,validation-134,[M-1] If any eBTC or stETH are accidentally locked the first user to openCDP will gain all of them,Invalid,,Intended design to the lucky user,,,,"""""",,,,,,
Unsatisfactory,validation-136,USER CAN INFLATE HIS COLLATERAL  SHARES TO STEAL PROTOCOL AND OTHER USER SHARES OR EVEN DOS THE PROTOCOL,Invalid. Low quality report,,Devoid of coded POC showcasing an actual scenario,,,,"""""",,,,,,
Unsatisfactory,validation-137,Use call instead of transfer,Invalid. Low quality report,,This isn't native ETH transfer,,,,"""""",,,,,,
Unsatisfactory,validation-138,[H-2] Missing validation for `TradeData`,Invalid,No specific attack path,Insufficient proof alleging the flaw,,,,"""""",,,,,,
Unsatisfactory,validation-142,Unchecked return value from low-level `call()`,Invalid. Low quality report,,_submit(0) will be called via the fallback function in Lido and revert if need be,,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/ZapRouterBase.sol#L38,,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/ZapRouterBase.sol#L38,,,,,,
Unsatisfactory,validation-143,"`_convertWrappedEthToStETH` of `ZapRouterBase` is mathematically incorrect, can potentially break the functionality of protocol",Invalid. Low quality report,"Eth , wEth and StEth are not expected to exist sametime",Insufficient proof. Workinga as intended,,,,"""""",,,,,,
Unsatisfactory,validation-148,Position Manager Permit Not Consistently Revoked After Operations,Invalid. Main point is EbtcLevaregeZapRouter,,borrowerOperations.renouncePositionManagerApproval(msg.sender) is invoked in EbtcLeverageZapRouter.sol,,,,"""""",,,,,,
Unsatisfactory,validation-15,Lack of input validation on the _convertWrappedEthToStETH function in the ZapRouterBase contract,Invalid,,Low QA,,,,"""""",,,,,,
Unsatisfactory,validation-151,Unchecked Return Value in LeverageMacroBase._doSwap,Invalid,,Check well in place,,,,"""""",,,,,,
Unsatisfactory,validation-153,Fee calculation in `LeverageZapRouterBase` may result in excessive fees and inaccurate CDP debt,Invalid,,Intended design,,,,"""""",,,,,,
Unsatisfactory,validation-154,A user could sandwich the oracle update by opening and closing `cdp` to gain profits,Invalid,There is slippage protection,Insufficient proof alleging the exploit. Common issue in DeFi after all,,,,"""""",,,,,,
Unsatisfactory,validation-155,Mistakenly-sent stETH/eBTC could be used by the next user to openCdp/closeCdp,Invalid,user error,Incorrect perceptions. It will be atomically prevented.,,,,"""""",,,,,,
Unsatisfactory,validation-158,Lack of Token Validation in `_getSwapOperations` Function Can Lead to Incorrect Token Handling,Invalid.,No specific attack path,Low QA on input mistake,,,,"""""",,,,,,
Unsatisfactory,validation-160,Two user touchpoint routers not sharing a global reentrancy guard opens the door for cross-contract reentrancy attack,Invalid,_doSwap() can only call to trusted DEX,Inadequate actual scenario entailed,,,,"""""",,,,,,
Unsatisfactory,validation-161,Protocol supports stETH but doesn't consider its unique transfer logic which would lead to not only a DOS of the depositing/withdrawal channel for this collateral token but also a flaw in multiple other core protocol logic,Overinflated,,Known readme issue,,,,"""""",,,,,,
Unsatisfactory,validation-163,`try/catch` doesn't catch every error which may lead to silent failure,Invalid,,Permit leak,,,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/ZapRouterBase.sol#L115-L133,"""https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/ZapRouterBase.sol#L115-L133,""""""",,,,,,
Unsatisfactory,validation-166,The function borrowerOperations.adjustCdpWithColl in the smart contract incorrectly assess a fee even when the debt does not increase,Invalid. Contract is OOS,_adjustCdpCallback() is overriden in LeverageZapRouterBase.sol,Insufficient proof alleging the flaw. LiquidatorReward has earlier been factored in EbtcLeverageZapRouter._openCdp() after all,,,,"""""",,,,,,
Unsatisfactory,validation-167,[H-1] User can open CDP position passing **unallowed** tokens in `TradeData.exchangeData`,Invalid,,Insufficient proof alleging the flaw. Concrete coded POC is needed,,,,"""""",,,,,,
Unsatisfactory,validation-168,Persistent PermitApprovals can get overridden when interacting with CDPs.,Invalid. See main invariants in readme.,,Permit leak. Same root cause as in #54,,,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/ZapRouterBase.sol#L115-L133,"""https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/ZapRouterBase.sol#L115-L133,""""""",,,,,,
Unsatisfactory,validation-169,A large amount of Ether can be sent to the user who closes a CDP in 'EbtcLeverageZapRouter' contract,Invalid. Low quality report,,Incorrect perceptions. It will be atomically prevented.,,,,"""""",,,,,,
Unsatisfactory,validation-171,Position manager can make calls on behalf of a user despite an expired deadline,"Invalid, execution will fail due to permit expired.",,Permit leak,,,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/ZapRouterBase.sol#L115-L133,"""https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/ZapRouterBase.sol#L115-L133,""""""",,,,,,
Unsatisfactory,validation-172,Unreliable Permit Handling Due to Phantom Function Vulnerability,Invalid,,Permit leak,,,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/ZapRouterBase.sol#L115-L133,"""https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/ZapRouterBase.sol#L115-L133,""""""",,,,,,
Unsatisfactory,validation-173,Lack of Slippage Protection in Trading Operations,Invalid. The code does have slippage protection.,,It's implemented in LeverageZapRouterBase::_getSwapOperations,,,,"""""",,,,,,
Unsatisfactory,validation-175,Unsafe downcasting in _getOwnerAddress function can be exploited to cause DoS,Invalid,,Incorrect assumptions. Logic working as intended,,,,"""""",,,,,,
Unsatisfactory,validation-176,Lack of Slippage protection in `LeverageZapRouterBase::_getSwapOperations` function could potentially force user to pay more than what they are expecting.,Invalid. The code does have slippage protection.,The input token amount could be fixed,The more the merrier,,,,"""""",,,,,,
Unsatisfactory,validation-177,"exchangeData can be maliciously used for arbitraty calls, even when DEXes are hardcoded and trusted like 1inch and 0x",Invalid. Report is not clear on impact description,,Inadequate coded POC alleging the exploit,,,,"""""",,,,,,
Unsatisfactory,validation-178,Replay Attacks possible on _permitPositionManagerApproval function,Invalid,,Invalid proof when compared to #54,,,,"""""",,,,,,
Unsatisfactory,validation-179,ATTACKER CAN WEAPONISE WRONG VALIDATION IN requireSingularMarginChange() function TO CLEAR HIS DEBT WITHOUT REPAYMENT USING adjustCdp function AND HENCE INCREASE HIS ICR TO BE ABLE TO BORROW MORE,Invalid,,Devoid of coded POC alleging flaw on the intended design,,,,"""""",,,,,,
Unsatisfactory,validation-181,_doSwapChecks should use >= rather than > when checking balance,Change > to >=,,Low inconsequential,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-protocol/packages/contracts/contracts/LeverageMacroBase.sol#L490-L494,,,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-protocol/packages/contracts/contracts/LeverageMacroBase.sol#L490-L494,,,,,,
Unsatisfactory,validation-185,Potential False Positive Deposit Detection Due to stETH Rebasing,GPT,rebasing would not occur during deposit,_submit(0) will be called via the fallback function in Lido and revert if need be,,,,"""""",,,,,,
Unsatisfactory,validation-186,`stETHMarginAmount` can be lower than the loan amount,Invalid. Low quality report,,Insufficient proof alleging a flaw,,,,"""""",,,,,,
Unsatisfactory,validation-187,Inaccurate stETH Deposit Calculation Due to Rebasing in _transferInitialStETHFromCaller,GPT,,Incorrect perceptions. It's rebaing but NOT FOT,,,,"""""",,,,,,
Unsatisfactory,validation-188,Lack of Slippage Protections for Asset Conversions in ZapRouterBase,Invalid. The code does have slippage protection.,,It's implemented in LeverageZapRouterBase::_getSwapOperations,,,,"""""",,,,,,
Unsatisfactory,validation-19,"Overcharging users, even if unintentional, can damage the protocol's reputation and erode user trust.",GPT,,Intended design,,,,"""""",,,,,,
Unsatisfactory,validation-21,Closing/Adjusting CDPs are done with a minute leakage in accounting and  funds,Some stETH remains as dust due to stETH-shares conversion. Seems QA as report does not describes a clear impact.,,Known readme issue,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/ZapRouterBase.sol#L103,,,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/ZapRouterBase.sol#L103,,,,,,
Unsatisfactory,validation-22,Users are consistently receiving less eBTC than they should for the amount of debt they're incurring.,Invalid. Fee is paid from the minted debt,,Intended design,,,,"""""",,,,,,
Unsatisfactory,validation-23,Incorrect Parameter Handling in _adjustCdpOperation function within LeverageZapRouterBase contract,Invalid,,Insufficient proof alleging the exploit. Low QA on user input mistake anyway,,,,"""""",,,,,,
Unsatisfactory,validation-24,Incorrect Parameter Handling in _openCdpOperation function within LeverageZapRouterBase contract,Invalid,,Insufficient proof alleging the exploit. Low QA on user input mistake anyway,,,,"""""",,,,,,
Unsatisfactory,validation-25,Incorrect Parameter Handling in _closeCdpOperation function within LeverageZapRouterBase contract,Invalid,,Insufficient proof alleging the exploit. Low QA on user input mistake anyway,,,,"""""",,,,,,
Unsatisfactory,validation-26,Missing Error Handling in sweepToCaller function within LeverageMacroBase contract,Invalid,,Low QA. Insufficient proof,,,,"""""",,,,,,
Unsatisfactory,validation-27,Insufficient Input Validation in sweepToken function within LeverageMacroBase contract,Invalid,,Low QA. Insufficient proof,,,,"""""",,,,,,
Unsatisfactory,validation-28,Incorrect Data Decoding in decodeFLData function within LeverageMacroBase contract,Invalid,,Insufficient proof alleging the flaw,,,,"""""",,,,,,
Unsatisfactory,validation-29,Add Zero Address Check and Optional Event Emission in `_doSwapChecks`,Invalid,,Low QA,,,,"""""",,,,,,
Unsatisfactory,validation-3,Unchecked return value of low-level `call()`/`delegatecall()`,GPT,,_submit(0) will be called via the fallback function in Lido and revert if need be,,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/ZapRouterBase.sol#L38,,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/ZapRouterBase.sol#L38,,,,,,
Unsatisfactory,validation-30,Vulnerability in `_doSwap` Function of `LeverageMacroBase` Contract Enables Unauthorized Token Transfers,Invalid,,Devoid of coded POC showcasing an actual scenario,,,,"""""",,,,,,
Unsatisfactory,validation-31,Discrepancy Between Documentation and Implementation in closeCdp Function Regarding Collateral Return Type,GPT,,Low QA on comment mismatch,,,,"""""",,,,,,
Unsatisfactory,validation-32,Misleading Comment and Incorrect Logic in adjustCdpWithWrappedEth Function Handling WETH vs WstETH,Invalid,,Low QA if ever mismatch,,,,"""""",,,,,,
Unsatisfactory,validation-33,Any Ether sent beyond the specified _ethMarginBalance is lost.,User mistake,user error,Incorrect assumptions. Higher margin equals higher CR,,,,"""""",,,,,,
Unsatisfactory,validation-34,"doOperation Function Always Reverts, Rendering It Unusable in LeverageZapRouterBase.sol",Invalid,,Intended design. The internal function from macro will be used,,,,"""""",,,,,,
Unsatisfactory,validation-35,Private _sweepEbtc() Function Transfers Balance to msg.sender Without Proper Access Control,Invalid,,Access control not applicable on a private function,,,,"""""",,,,,,
Unsatisfactory,validation-36,Missing Success Check in _openCdpForCallback Leads to Potential Fee Transfer Without CDP Creation,Invalid,,SafeTransfer will revert if need be,,,,"""""",,,,,,
Unsatisfactory,validation-37,Lack of Minimum Deposit Check in _depositRawEthIntoLido May Lead to Loss of Funds,Invalid,,_submit(0) will be called via the fallback function in Lido and revert if need be,,,,"""""",,,,,,
Unsatisfactory,validation-39,Reentrancy vulnerability,Invalid,,Inadequate actual scenario entailed,,,,"""""",,,,,,
Unsatisfactory,validation-40,CDP operations can be performed even when the permit is expired,"Invalid, execution will fail due to permit expired.",would rerert in later execution,Permit leak,,,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/ZapRouterBase.sol#L115-L133,"""https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/ZapRouterBase.sol#L115-L133,""""""",,,,,,
Unsatisfactory,validation-42,User can send eth to router,Invalid,,Commonly known issue,,,,"""""",,,,,,
Unsatisfactory,validation-43,The leverage router doesn't support users to pay eBTC debt back with their own assets,Invalid. Feature request,not issue,Intended leverage design,,,,"""""",,,,,,
Unsatisfactory,validation-44,Owner can't change `zapFeeBPS` and `zapFeeReceiver`,Invalid,,Low QA on owner controlled immutable variables,,,,"""""",,,,,,
Unsatisfactory,validation-45,`flashLoan` function's result is not checked.,"No check for flashloan success. QA at best, if it fails the revert is bubbled up.",revert if not success,Insufficient proof alleging the flaw,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-protocol/packages/contracts/contracts/LeverageMacroBase.sol#L185C8-L198C15,,,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-protocol/packages/contracts/contracts/LeverageMacroBase.sol#L185C8-L198C15,,,,,,
Unsatisfactory,validation-46,Relying on the difference in the contract's stETH balance before and after the `_closeCdpOperation` could potentially allow excess withdrawal of `stETH`,Invalid,,Incorrect perceptions. It will be atomically prevented.,,,,"""""",,,,,,
Unsatisfactory,validation-52,Potential manipulation of CDP queue position through unvalidated upperHint and lowerHint parameters,Invalid,hint checked in sortedCap contract,Devoid of coded POC showcasing an actual scenario,,,,"""""",,,,,,
Unsatisfactory,validation-54,ZapRouterBase._permitPositionManagerApproval() will bypass an expired permit.,"Invalid, execution will fail due to permit expired.",,Permit leak,,,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/ZapRouterBase.sol#L115-L133,"""https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/ZapRouterBase.sol#L115-L133,""""""",,,,,,
Unsatisfactory,validation-55,The conversion path from ETH to stETH can be suboptimal in `ZapRouterBase` and cause loss of funds when depositing especially in a a 1:1 ratio,Invalid,,Intended design of having coll denominated in stETH,,,,"""""",,,,,,
Unsatisfactory,validation-56,"LeverageZapRouterBase.sol :: _adjustCdpOperation() is using the amount of stETH instead of ETH, resulting in an incorrect calculation of the shares needed to modify the collateral.",eth and stETH are 1:1,,Intended design of having coll denominated in stETH,,,,"""""",,,,,,
Unsatisfactory,validation-58,Front-Running in Position Manager Approval,"Invalid, execution will fail due to permit expired.",,Permit leak,,,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/ZapRouterBase.sol#L115-L133,"""https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-zap-router/src/ZapRouterBase.sol#L115-L133,""""""",,,,,,
Unsatisfactory,validation-59,Position Manager Approval Remains Active After Operations,Invalid,,No success verification needed for merely updating teh mapping positionManagers[_borrower][_positionManager] = _approval,,,,"""""",,,,,,
Unsatisfactory,validation-60,"Fees can be bypassed when sweeping tokens, leading to a loss of protocol revenue",Invalid,,Intended design,,,,"""""",,,,,,
Unsatisfactory,validation-61,Potential for token dust accumulation violates contract invariant,Invalid.,,Readme: ZapRouter contract should not have any tokens after each operation (aside from rounding),,,,"""""",,,,,,
Unsatisfactory,validation-62,Inconsistent Token Sweeping May Leave Residual Tokens in ZapRouter,GPT,,Already commented sweepStEth happens outside of this call,,,,"""""",,,,,,
Unsatisfactory,validation-63,Inconsistent Fee Assessment in CDP Operations,Invalid. Opening a CDP is debt increase,,Intended design,,,,"""""",,,,,,
Unsatisfactory,validation-64,Reentrancy Attack in `flashLoan` Function,Low quality report,,Inadequate actual scenario entailed,,,,"""""",,,,,,
Unsatisfactory,validation-66,Retention of non-stETH tokens in ZapRouter contract,GPT,,Insufficient proof alleging the flaw,,,,"""""",,,,,,
Unsatisfactory,validation-67,The function _openCdp does not use _stEthMarginAmount causing the token transfer from user is useless,Low quality,,Insufficient proof alleging a flaw,,,,"""""",,,,,,
Unsatisfactory,validation-69,Fee calculation in `LeverageZapRouterBase` could lead to excessive fees being charged and inaccurate CDP debt,Invalid. Fee is paid from the minted debt,,Intended design,,,,"""""",,,,,,
Unsatisfactory,validation-7,Precision Loss in stETH to wstETH Conversion Leading to Fund Loss,OOS see Readme,,Known readme issue,,,,"""""",,,,,,
Unsatisfactory,validation-71,Excessive Approval Amount in LeverageZapRouterBase Contract,Invalid,,Intended design,,,,"""""",,,,,,
Unsatisfactory,validation-72,Fixed liquidation reward will cause bad debt,Invalid,"design choice, no enough proof",Intended design. Insufficient proof alleging the fixed reward flaw,,,,"""""",,,,,,
Unsatisfactory,validation-73,"An invariant is broken which relates to Position Manager Permit not being revoked after operations, allowing unauthorized access to user CDPs",Invalid,,borrowerOperations.renouncePositionManagerApproval(msg.sender) is invoked in EbtcLeverageZapRouter.sol,,,,"""""",,,,,,
Unsatisfactory,validation-77,Leverage router cannot perform debt decrease and collateral increase,Invalid. Feature request,design choice,Intended leverage design,,,,"""""",,,,,,
Unsatisfactory,validation-78,Unexpected Ether Balance (SWC-132) in the _convertWrappedEthToStETH function of the ZapRouterBase contract affecting the EbtcLeverageZapRouter contract,Invalid,,Low QA reported by the Analyzer,,,,"""""",,,,,,
Unsatisfactory,validation-79,Weak Sources of Randomness from Chain Attributes in EbtcLeverageZapRouter contract,Invalid,,Low QA. Incorrect perceptions,,,,"""""",,,,,,
Unsatisfactory,validation-80,Block Values Used as a Proxy for Time in EbtcLeverageZapRouter contract,Invalid,,Incorrect perceptions,,,,"""""",,,,,,
Unsatisfactory,validation-81,Unprotected Ether Withdrawal Found (transfer/send) in the ZapRouterBase contract _transferInitialStETHFromCaller function affecting the EbtcLeverageZapRouter contract,Invalid,,Low QA. Intended design,,,,"""""",,,,,,
Unsatisfactory,validation-82,an absence of a repayment verification,Invalid,,Insufficient proof alleging the flaw,,,,"""""",,,,,,
Unsatisfactory,validation-84,Weak sources of randomness from chain attributes in LeverageMacroBase contract,Invalid,,Low QA. Incorrect perceptions,,,,"""""",,,,,,
Unsatisfactory,validation-85,Block values used as a proxy for time found in LeverageMacroBase contract,Invalid,,Incorrect perceptions,,,,"""""",,,,,,
Unsatisfactory,validation-87,Bad Actor can Completely Sweep Off StEth in Contract,Invalid,,It's msg.sender linked,,,,"""""",,,,,,
Unsatisfactory,validation-88,Sunnyboy95 - Security Enhancements and Best Practices Implementation for `EbtcLeverageZapRouter` Contract,Invalid,,Sporadically unstructured proofs entailed,,,,"""""",,,,,,
Unsatisfactory,validation-89,Users Will Be Able to open CDPs with insufficient collateral due to Incorrect Collateral Value Handling in CDP Opening Process,Invalid. Code does not uses _ethMarginBalance again.,,That's the leveraged amount needed,,,,"""""",,,,,,
Unsatisfactory,validation-9,Lack of Explanation on Emitting Events for Revert Reasons on the EbtcLeverageZapRouter contract,Invalid,,Low QA,,,,"""""",,,,,,
Unsatisfactory,validation-91,Incorrect conversion to eth to stEth.,Invalid. ETH and stETH are 1:1,,Intended design of having coll denominated in stETH,,,,"""""",,,,,,
Unsatisfactory,validation-92,Not checking return value on flashLoan contract,"No check for flashloan success. QA at best, if it fails the revert is bubbled up.",,Insufficient proof alleging the flaw,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-protocol/packages/contracts/contracts/LeverageMacroBase.sol#L185C8-L198C15,,,https://github.com/code-423n4/2024-06-badger/blob/main/ebtc-protocol/packages/contracts/contracts/LeverageMacroBase.sol#L185C8-L198C15,,,,,,
Unsatisfactory,validation-95,Eth could be stuck in the contract,User mistake,user error,Low QA on user input mistake,,,,"""""",,,,,,
Unsatisfactory,validation-96,Incorrect parameters used in  slippage checks while openingCdp.,Low quality report,,Insufficient proof alleging the flaw. LiquidatorReward has earlier been factored in EbtcLeverageZapRouter._openCdp() after all,,,,"""""",,,,,,
Unsatisfactory,validation-97,Potential Misinterpretation of Liquidator Rewards in Smart Contract Logic,Invalid,,Incorrect assumptions and perceptions,,,,"""""",,,,,,
Unsatisfactory,validation-99,Incorrect Parameter Order in Struct Initialization Leading to Financial Miscalculations,Invalid. Order here is not important as they are pre-fixed with the fields names,,Insufficient proof. Order doesn't matter in named parameters,,,,"""""",,,,,,